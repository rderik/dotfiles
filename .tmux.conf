# Change prefix key from C-b to C-s
# This is only easier if we are going to remap Capslock to Ctrl
unbind C-b
set -g prefix C-s

# reload tmux conf file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf refreshed"

# change status bar background
set -g status-bg '#4e5d62'
# Enable mouse mode (tmux 2.1 and above)
set -g mouse on
# set terminal to use a nice colour schema
set -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "xterm-256color"
# copy paste to work on tmux
set -g set-clipboard on
# Fix problem with Slow Esc on emacs with Tmux on Evil mode
#set timeout timeoutlen=1000 ttimeoutlen=100
set -s escape-time 0
#By default, all windows in a session are constrained to the size of the smallest client connected to that session, even if both clients are looking at different windows. It seems that in this particular case, Screen has the better default where a window is only constrained in size if a smaller client is actively looking at it. This behaviour can be fixed by setting tmux's aggressive-resize option.
setw -g aggressive-resize on

# By default tmux starts window's index with 0, this line changes it ot 1
set-option -g base-index 1
set-option -g renumber-windows on


# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Use vim keybindings in copy mode for mac os with pbcopy
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
# when in vim bind-key navigation to other panel is suppressed
# and the vim keys replace them to navigate vim splits the way
# to get back to tmux panes is by going back to previous pane using
# the command bind-key \  

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key \\ select-pane -l

#using fish-shell as default
#set -g default-command /usr/local/bin/fish
#set -g default-shell /usr/local/bin/fish

# [S] send Panel to another window or [B] bring Panel to current Window
bind-key S choose-window "join-pane -t "%%""
bind-key B choose-window "join-pane -s "%%""

# Send the same command to all panes/windows/sessions
# modification to only send to the current window panes
# https://scripter.co/command-to-every-pane-window-session-in-tmux/
bind E command-prompt -p "Command:" \
       "run \"tmux list-panes -F '##{session_name}:##{window_index}.##{pane_index}' \
              | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""


# binds a pane to a process so when we are done with the process it'll kill the pane
bind-key t split-window -h "htop"
bind-key T split-window -h "vim /Users/derik/.tmux.conf"
bind-key P split-window -h "vim /Users/derik/Library/Mobile\\ Documents/com~apple~CloudDocs/DevNotes/notes.md"
bind-key N split-window -h "vim /Users/derik/Documents/Work/UVa/worknotes/notes.md"
bind-key V split-window -h "vim /Users/derik/.vimrc"

# Toggle Syncronize panes
bind-key C-p set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'

#Plugins to persist session
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-save 'G'
bind-key C-s display-message "nothing"
#set -g @plugin 'tmux-plugins/tmux-continuum'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
